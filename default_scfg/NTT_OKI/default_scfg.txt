#===== Default Startup Configurations ========
# This file contains default startup configuration values
# specific to ASCI: Saturn2 - SFU
# DO NOT MAKE CHANGES TO THIS FILE!

[ASIC INFO]
CHAR-ARRAY      CFG_ID_API_VERSION                              = {1, 8};    ##API version major.minor
INT             CFG_ID_CUSTOMER_BIT                             = 0x2004; ##Customer bit
INT             CFG_ID_BOARD_INFO_BIT                           = 0x1;    ##Board info
CHAR            CFG_ID_DATAPATH_MODE                            = 1;                   # 0 = R/G mode, 1 = bridge mode

[NI CONFIGS]
MAC             CFG_ID_MAC_ADDRESS                              = 00:11:57:00:00:00;    ##MAC addr in PON MAC
CHAR-ARRAY      CFG_ID_PHY_BASE_ADDR                            = {0x00,0x00,0x00,0x01,0x05,0x08,0x00}; ##eth_mdio_addr
CHAR-ARRAY      CFG_ID_PHY_INTERFACE                            = {0x00,0x00,0x00,0x00,0x02,0x0c,0x08}; ##eth_if_mode: GMII, RGMII, ...
CHAR            CFG_ID_PHY_EEE_ENABLE                           = 0; #0-disable PHY EEE function, 1-enable PHY EEE function.
CHAR-ARRAY      CFG_ID_UNI_CONNECTION                           = {0x00,0x00,0x00,0x01,0x01,0x00,0x00}; ##UNI port enable bit
INT             CFG_ID_GE_PORT_BIT_MAP                          = 0x00000018; ## b'00011000 --- port 3, port 4
INT             CFG_ID_XGE_PORT_BIT_MAP                         = 0x00000060; ## b'01100000 --- port 5, port 6
CHAR-ARRAY      CFG_ID_PORT_SPECIAL_PACKET_PROFILE_ID           = {2, 2, 2, 2, 2 ,2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}; ##assigned special packet profile id (0-7) for each port(0-63)
INT             CFG_ID_UNI_ENCRYPTION_MODE                      = 0x0; ## 0: disabled; 0x3: MACSEC TX; 0x30000: MACSEC RX; 0x30003: MACSEC TX&RX
CHAR            CFG_ID_NI_GE_TX_IPG_SEL                         = 4;
MAC             CFG_ID_NE_MAC_ADDR0                             = 00:11:57:00:00:01;    ##MAC address of NI interface 0
MAC             CFG_ID_NE_MAC_ADDR1                             = 00:13:25:00:00:02;    ##MAC address of NI interface 1
MAC             CFG_ID_NE_MAC_ADDR2                             = 00:13:25:00:00:03;    ##MAC address of NI interface 2
MAC             CFG_ID_NE_MAC_ADDR3                             = 00:13:25:00:00:04;    ##MAC address of NI interface 3
MAC             CFG_ID_NE_MAC_ADDR4                             = 00:13:25:00:00:05;    ##MAC address of NI interface 4
MAC             CFG_ID_NE_MAC_ADDR5                             = 00:13:25:00:00:06;    ##MAC address of NI interface 5
MAC             CFG_ID_NE_MAC_ADDR6                             = 00:13:25:00:00:07;    ##MAC address of NI interface 6
MAC             CFG_ID_NE_MAC_ADDR7                             = 00:13:25:00:00:08;    ##MAC address of NI interface 7
CHAR-ARRAY      CFG_ID_NE_INTF_PORTS0                           = {0x03, 0x04, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}; ##Port list of NI interface 0
CHAR-ARRAY      CFG_ID_NE_INTF_PORTS1                           = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}; ##Port list of NI interface 1
CHAR-ARRAY      CFG_ID_NE_INTF_PORTS2                           = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}; ##Port list of NI interface 2
CHAR-ARRAY      CFG_ID_NE_INTF_PORTS3                           = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}; ##Port list of NI interface 3
CHAR-ARRAY      CFG_ID_NE_INTF_PORTS4                           = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}; ##Port list of NI interface 4
CHAR-ARRAY      CFG_ID_NE_INTF_PORTS5                           = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}; ##Port list of NI interface 5
CHAR-ARRAY      CFG_ID_NE_INTF_PORTS6                           = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}; ##Port list of NI interface 6
CHAR-ARRAY      CFG_ID_NE_INTF_PORTS7                           = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}; ##Port list of NI interface 7

[PON CONFIGS]
CHAR            CFG_ID_PON_MAC_MODE                             = 0x02; ##PON MAC mode setting
STRING          CFG_ID_PON_VENDOR_ID                            = CORT;
INT             CFG_ID_PON_VSSN                                 = 0x12345678;
INT             CFG_ID_PON_REGISTRATION_ID0                     = 0x78563412;
INT             CFG_ID_PON_REGISTRATION_ID1                     = 0x00000000;
INT             CFG_ID_PON_REGISTRATION_ID2                     = 0x00000000;
INT             CFG_ID_PON_REGISTRATION_ID3                     = 0x00000000;
INT             CFG_ID_PON_REGISTRATION_ID4                     = 0x00000000;
INT             CFG_ID_PON_REGISTRATION_ID5                     = 0x00000000;
INT             CFG_ID_PON_REGISTRATION_ID6                     = 0x00000000;
INT             CFG_ID_PON_REGISTRATION_ID7                     = 0x00000000;
INT             CFG_ID_PON_REGISTRATION_ID8                     = 0x00000000;
STRING          CFG_ID_PON_OLT_TYPE                             = ALCL; ##GPON OLT Vendor name, support ZTE,ADTRAN,ALCL,CALIX,SUMITOMO,CORTINA,HUAWEI
CHAR            CFG_ID_GPON_ONU_MODE                            = 0; #0-G.983, 1-XGPON_ZTE, 2-XGPON_CALIX
CHAR            CFG_ID_EPON_ONU_MODE                            = 1; #0-SIEPON_PACKAGE_A, 1-SIEPON_PACKAGE_B, 2-SIEPON_PACKAGE_C, 3-SIEPON_PACKAGE_C_KT
CHAR-ARRAY      CFG_ID_GPON_VERSION                             = {0x56,0x31,0x2E,0x30, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00}; ##GPON version string, default value is V1.0
INT             CFG_ID_PON_BWMP_RSP_TM_CFG                      = 0x1543;
CHAR            CFG_ID_PON_LASER_ALIGN                          = 0x03;
CHAR            CFG_ID_PON_NGPON2_DEFAULT_CHAN                  = 0x00;
CHAR            CFG_ID_PON_NGPON2_PROTECTION_CHAN               = 0x00;
CHAR            CFG_ID_PON_NGPON2_CHAN_PARTITION_INDEX          = 0x00;
INT             CFG_ID_XGPN_ACTP_TOZ                            = 80000;
INT             CFG_ID_XGPN_ACTP_TO23                           = 1000;
INT             CFG_ID_XGPN_ACTP_TO4                            = 1000;
INT             CFG_ID_XGPN_ACTP_TO5                            = 1000;
CHAR            CFG_ID_PON_UPSTREAM_USE_DEEP_QUEUE              = 1; ##0:DeepQueue not used; 1:used; 2: more setting on ARB WAN related;
CHAR            CFG_ID_WAN_INTERFACE_DEEP_Q                     = 0; # DeepQ usage of upstream traffic
CHAR            CFG_ID_LAN_INTERFACE_DEEP_Q                     = 0; # DeepQ usage of downstream traffic
CHAR            CFG_ID_PON_VOQ_MODE                             = 0x01; ##VoQ mode
CHAR            CFG_ID_PON_LASER_BURST_POLARITY                 = 0x01; ##Laser burst tx polarity
CHAR            CFG_ID_PON_LASER_ON_TIME                        = 0x08; ##Laser ON time, unit: TQ
CHAR            CFG_ID_PON_LASER_OFF_TIME                       = 0x08; ##Laser OFF time, unit: TQ
INT             CFG_ID_PON_MPCP_SYNC_TIME                       = 0x004b0020;	#mpcp sync time, for NTT set to 0x004bf820;
CHAR            CFG_ID_PON_RX_LOS_POLARITY_INVERT               = 0x00; ##RX_LOS_POLARITY_INVERT
CHAR            CFG_ID_PON_FEC_BD_PATTERN                       = 0; #uses FEC BD pattern parameters compatible with: 0---Tiger4 OLT; 1 -- Other OLTs
INT             CFG_ID_PUC_VOQBUFLIMIT_A                        = 21251;
INT             CFG_ID_PUC_VOQBUFLIMIT_B                        = 21251;
INT             CFG_ID_PUC_VOQBUFLIMIT_C                        = 21251;
INT             CFG_ID_PUC_VOQBUFLIMIT_D                        = 21251; ## Max buffer count, each buffer is 32B. Range 0x140 ~ 0x7FFF (10kB(at least a largest packet) ~ 1MB)
INT             CFG_ID_PUC_VOQBUFLIMIT_E                        = 0x140; ## Max buffer count, each buffer is 32B. Range 0x140 ~ 0x7FFF (10kB(at least a largest packet) ~ 1MB)
INT             CFG_ID_PUC_VOQBUFLIMIT_F                        = 0x140; ## Max buffer count, each buffer is 32B. Range 0x140 ~ 0x7FFF (10kB(at least a largest packet) ~ 1MB)
INT             CFG_ID_PUC_VOQBUFLIMIT_G                        = 0x140; ## Max buffer count, each buffer is 32B. Range 0x140 ~ 0x7FFF (10kB(at least a largest packet) ~ 1MB)
CHAR-ARRAY      CFG_ID_PUC_LLID0_COS_THRESHOLDS_SEL             = {7,7,7,7,3,2,1,0}; ## {CoS0 buffer limit, CoS1 buffer limt, CoS2 buffer limit, CoS3 buffer limt,
										     ## CoS4 buffer limit, CoS5 buffer limt,CoS6 buffer limit, CoS7 buffer limt }
										     ## 0: No buffer limit,
										     ## 1: use buffer limit A,
										     ## 2: use buffer limit B,
										     ## 3: use buffer limit C,
										     ## 4: use buffer limit D,
										     ## 5: use buffer limit E,
										     ## 6: use buffer limit F,
										     ## 7: use buffer limit G
CHAR-ARRAY      CFG_ID_PUC_LLID1_COS_THRESHOLDS_SEL             = {7,7,7,7,3,2,1,0};
CHAR-ARRAY      CFG_ID_PUC_LLID2_COS_THRESHOLDS_SEL             = {7,7,7,7,3,2,1,0};
CHAR-ARRAY      CFG_ID_PUC_LLID3_COS_THRESHOLDS_SEL             = {7,7,7,7,1,2,3,4};
CHAR-ARRAY      CFG_ID_PUC_LLID4_COS_THRESHOLDS_SEL             = {7,7,7,7,3,2,1,0};
CHAR-ARRAY      CFG_ID_PUC_LLID5_COS_THRESHOLDS_SEL             = {7,7,7,7,3,2,1,0};
CHAR-ARRAY      CFG_ID_PUC_LLID6_COS_THRESHOLDS_SEL             = {7,7,7,7,3,2,1,0};
CHAR-ARRAY      CFG_ID_PUC_LLID7_COS_THRESHOLDS_SEL             = {7,7,7,7,3,2,1,0};
CHAR            CFG_ID_PON_DS_FORWARD_BCMC                      = 0x01; ##EPON, 0--stop forwarding BC and MC (de-regstate, ktbmt requreiment); 1--always forward BC and MC(de-reg state)
CHAR            CFG_ID_PON_LLID_MODE                            = 0x00; ##EPON, 0--single LLID mode; 1--multiple LLID mode
CHAR            CFG_ID_PON_LLID_NUM                             = 0x01; ##EPON LLID num max support
CHAR            CFG_ID_PON_BC_7FFF_TO_LLID_INDEX                = 0x1f; ##0x7fff/7ffe mapped to internal llid id
CHAR            CFG_ID_PON_REPORT_MODE                          = 0x5;  ##Report mode, 2QS_8Q-0; 1QS_8Q-1; 1QS_1Q-2; 2QS_1Q-3; 4QS_1Q-4; NTT-5;
CHAR            CFG_ID_EN_REGISTER_AFTER_BOOT                   = 0x01; ##EPON registration after boot
CHAR-ARRAY      CFG_ID_USER_PORT_ID                             = {0xFF,0xFF,0xFF,0x00,0x01,0x02,0x03}; ##used by OAM
INT             CFG_ID_EPON_ENCRYPTION_MODE                     = 0x3; ## 0: disabled; 1: AES_CTR; 2: AES_CFB; 3: MACSEC; 4: SW_CTC_CHURNING; 5: HW_CTC_CHURNING

CHAR            CFG_ID_SIEPON_PACKAGE_B_GRT_PROTECTION_MODE     = 0;
CHAR            CFG_ID_SIEPON_PACKAGE_B_GRT_PROTECTION_DYNAMIC_MODE  = 1;
INT             CFG_ID_SIEPON_PACKAGE_B_PROTECTION_GRT_VAL      = 0x3FF;
INT             CFG_ID_SIEPON_PACKAGE_B_MAX_GRT_VAL             = 0x61a8;
INT             CFG_ID_SIEPON_PACKAGE_B_REPORT_LATENCY_ADJ      = 0x464;
INT             CFG_ID_SIEPON_PACKAGE_B_PUC_PVTCFG              = 0x00280011; ##allow user to set PUC_PVTCFG
									      ##pkgbrptceil #1 = The reported value of lowest numbered queue is adjusted upwards so sum
									      ##of all reports match to configured threshold value
									      ##If all the frames of the queue couldn't be scanned due to non-availability of time. 
									      ##For this case, the qs1 report is still accurate. 0 = normal report 
									      ##pkgboptschen:1'b1 => The scheduler transmits subset of queues if grant from OLT is less 
									      ##than sum of all queue lengths reported for QSet2
									      ##For example, if QSet2 has 4 queues, and following is the reported values for each
									      ##queue q3 = 400 TQ, q2 = 800 TQ, q1 = 1000 TQ, q0 = 2000 TQ.  It is expected that OLT
									      ##grants at least 4200 TQ, but if OLT grants say 1250 TQs, then all frames from q3 and q2 are
									      ##transmitted, similarly if grant size is 500 TQ, then only frames from q3 are transmitted
									      ##Same mechanism applies if OLT grants more than sum of all queue lengths reported
									      ##for QSet2. In this case, frames reported under QSet1(total) are selected to fill the extra
									      ##bandwidth in priority-first fashion.
									      ##1'b0 => The scheduler transmits all reported frames under QSet1(total) if OLT
									      ##grant is >= sum of all queue lengths reported under QSet1,
									      ##else if OLT grant is >= sum of all queue lengths reported uunder QSet2, transmits
									      ##all frames reported under QSet2, transmits no frames otherwise, i.e., scheduler
									      ##doesn't pick subset of queues if it can't transmit all the frames.
INT             CFG_ID_SIEPON_PACKAGE_B_SCHEDULE_MODE           = 1; ##0-threshold first, 1-priority first, 2-priority first with strict priority (pkgbschmode)
INT             CFG_ID_SIEPON_PACKAGE_B_UC_LLID_PORT_MAP        = 0x7; #valid range: 0x7, 0x30-3F
INT             CFG_ID_SIEPON_PACKAGE_B_BC_LLID_PORT_MAP        = 0x3F; #valid range 0x30-3F

CHAR            CFG_ID_MAX_MACSEC_KEY                           = 4;
CHAR            CFG_ID_MACSEC_SWITCH_PORT                       = 1;	#16 bit port number used in MACSec SCI

CHAR-ARRAY      CFG_ID_UPSTREAM_PON_NE_PORT_ID                          = {0x30,7,5,4,6,3,2,1, 0,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff}; ## NE ports to be connected to PON on upstream: use CFG_ID_UPSTREAM_PON_NE_PORT_ID[0] first, CFG_ID_UPSTREAM_PON_NE_PORT_ID[31] last. Size of array is 32. 0xff terminates the list of mapped ports

CHAR            CFG_ID_MAX_QUEUES_PER_TCONT                             = 8; ## valid valies: 1,2,4,8. Default: 8 queues per TCONT

[L3QM CONFIGS]
INT             CFG_ID_L3QM_EQ_BUFFER_ALIGN_SIZE                = 128;  ##Align size for QM EQ pools
CHAR            CFG_ID_L3QM_DESC_SIZE                           = 4;    ##size of one RX FIFO (unit: byte)
CHAR            CFG_ID_L3QM_DESC_PER_EPP                        = 1;    ##count of RX FIFO per EPP
CHAR            CFG_ID_L3QM_ACE_ENABLE                          = 0;    ##turn on/off QM ACE test
INT-ARRAY       CFG_ID_L3QM_AXI_ATTRIB_EQ_VALUES                = {0x0, 0x0, 0x8, 0x8, 0x0, 0x7, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};
INT-ARRAY       CFG_ID_L3QM_AXI_ATTRIB_CPU_EPP_VALUES           = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0, 0};
CHAR            CFG_ID_L3QM_MAGIC_MARKER_LEN                    = 0;    ##length of Magic Mark
CHAR            CFG_ID_L3QM_EQ_PROFILE_CPU_ID                   = 0;    ##QM EQ pool profile ID for CPU64
CHAR            CFG_ID_L3QM_EQ_PROFILE_CPU_RULE                 = 0;    ##QM EQ pool profile rule for CPU64
CHAR            CFG_ID_L3QM_EQ_PROFILE_CPU_USE_FBM              = 0;    ##use FBM to fill EQ pool for CPU64
CHAR            CFG_ID_L3QM_EQ_PROFILE_CPU_POOL0_EQ_ID          = 0;    ##QM EQ pool0 ID for CPU64
INT             CFG_ID_L3QM_EQ_PROFILE_CPU_POOL0_BUF_COUNT      = 768;  ##QM count of EQ pool0 buffer for CPU64
INT             CFG_ID_L3QM_EQ_PROFILE_CPU_POOL0_BID_START      = 256;  ##QM BID start of EQ pool0 buffer for CPU64
INT             CFG_ID_L3QM_EQ_PROFILE_CPU_POOL0_BUF_SZ         = 2048; ##QM buffer size of EQ pool0 buffer for CPU64
CHAR            CFG_ID_L3QM_EQ_PROFILE_CPU_POOL0_FBM_POOL_ID    = 6;    ##QM FBM pool ID of EQ pool0 buffer for CPU64
CHAR            CFG_ID_L3QM_EQ_PROFILE_CPU_POOL1_EQ_ID          = 1;    ##QM EQ pool1 ID for CPU64
INT             CFG_ID_L3QM_EQ_PROFILE_CPU_POOL1_BUF_COUNT      = 768;  ##QM count of EQ pool1 buffer for CPU64
INT             CFG_ID_L3QM_EQ_PROFILE_CPU_POOL1_BID_START      = 1024; ##QM BID start of EQ pool1 buffer for CPU64
INT             CFG_ID_L3QM_EQ_PROFILE_CPU_POOL1_BUF_SZ         = 2048; ##QM buffer size of EQ pool1 buffer for CPU64
CHAR            CFG_ID_L3QM_EQ_PROFILE_CPU_POOL1_FBM_POOL_ID    = 7;    ##QM FBM pool ID of EQ pool1 buffer for CPU64
CHAR            CFG_ID_L3QM_EPP_PROFILE_CPU_ID                  = 0;    ##QM EPP profile ID for CPU64
INT             CFG_ID_L3QM_EPP_PROFILE_CPU_MAP_MODE            = 0;    ##QM WPP map mode for CPU64
CHAR            CFG_ID_L3QM_EQ_PROFILE_DQ_ID                    = 2;    ##QM EQ pool profile ID for DEEPQ
CHAR            CFG_ID_L3QM_EQ_PROFILE_DQ_RULE                  = 0;    ##QM EQ pool profile rule for DEEPQ
CHAR            CFG_ID_L3QM_EQ_PROFILE_DQ_POOL0_EQ_ID           = 4;    ##QM EQ pool0 ID for DEEPQ
INT             CFG_ID_L3QM_EQ_PROFILE_DQ_POOL0_BUF_COUNT       = 4096; ##QM count of EQ pool0 buffer for DEEPQ
INT             CFG_ID_L3QM_EQ_PROFILE_DQ_POOL0_BID_START       = 2000; ##QM BID start of EQ pool0 buffer for DEEPQ
INT             CFG_ID_L3QM_EQ_PROFILE_DQ_POOL0_BUF_SZ          = 2048; ##QM buffer size of EQ pool0 buffer for DEEPQ
CHAR            CFG_ID_L3QM_EQ_PROFILE_DQ_POOL1_EQ_ID           = 5;    ##QM EQ pool1 ID for DEEPQ
INT             CFG_ID_L3QM_EQ_PROFILE_DQ_POOL1_BUF_COUNT       = 3072; ##QM count of EQ pool1 buffer for DEEPQ
INT             CFG_ID_L3QM_EQ_PROFILE_DQ_POOL1_BID_START       = 6096; ##QM BID start of EQ pool1 buffer for DEEPQ
CHAR            CFG_ID_SIEPON_B_DS_DQ_PROFILE                   = 3;
CHAR            CFG_ID_SIEPON_B_DS_DQ_RULE                      = 0;
CHAR            CFG_ID_SIEPON_B_DS_DQ_EQ_POOL0_ID               = 5;
INT             CFG_ID_SIEPON_B_DS_DQ_EQ_POOL0_START_ADDR       = 0x40000000;
INT             CFG_ID_SIEPON_B_DS_DQ_EQ_POOL0_BID_START        = 2000;
INT             CFG_ID_SIEPON_B_DS_DQ_EQ_POOL0_BUF_SZ           = 4096;
INT             CFG_ID_SIEPON_B_DS_DQ_EQ_POOL0_BUF_COUNT        = 116;
CHAR            CFG_ID_SIEPON_B_DS_DQ_EQ_POOL1_ID               = 6;
INT             CFG_ID_SIEPON_B_DS_DQ_EQ_POOL1_START_ADDR       = 0x7D00000;
INT             CFG_ID_SIEPON_B_DS_DQ_EQ_POOL1_BID_START        = 2116;
INT             CFG_ID_SIEPON_B_DS_DQ_EQ_POOL1_BUF_SZ           = 4096;
INT             CFG_ID_SIEPON_B_DS_DQ_EQ_POOL1_BUF_COUNT        = 768;
CHAR            CFG_ID_SIEPON_B_US_DQ_PROFILE                   = 4;
CHAR            CFG_ID_SIEPON_B_US_DQ_RULE                      = 0;
CHAR            CFG_ID_SIEPON_B_US_DQ_EQ_POOL0_ID               = 2;
INT             CFG_ID_SIEPON_B_US_DQ_EQ_POOL0_START_ADDR       = 0x8000000;
INT             CFG_ID_SIEPON_B_US_DQ_EQ_POOL0_BID_START        = 2884;
INT             CFG_ID_SIEPON_B_US_DQ_EQ_POOL0_BUF_SZ           = 4096;
INT             CFG_ID_SIEPON_B_US_DQ_EQ_POOL0_BUF_COUNT        = 1958;
CHAR            CFG_ID_SIEPON_B_US_DQ_EQ_POOL1_ID               = 3;
INT             CFG_ID_SIEPON_B_US_DQ_EQ_POOL1_START_ADDR       = 0x87A6000;
INT             CFG_ID_SIEPON_B_US_DQ_EQ_POOL1_BID_START        = 4842;
INT             CFG_ID_SIEPON_B_US_DQ_EQ_POOL1_BUF_SZ           = 4096;
INT             CFG_ID_SIEPON_B_US_DQ_EQ_POOL1_BUF_COUNT        = 1958;
INT             CFG_ID_L3QM_EQ_PROFILE_DQ_POOL1_BUF_SZ          = 2048; ##QM buffer size of EQ pool1 buffer for DEEPQ
CHAR            CFG_ID_NE_USE_QM_EQ_REFILL_INT                  = 0;    ##use QM REFILL interrupt to refill EQ pool buffer
CHAR            CFG_ID_NE_USE_QM_EQ_REFILL_TASKLET              = 0;    ##when QM REFILL is turned on use tasklet to refill EQ pool buffer
INT-ARRAY       CFG_ID_L3QM_EQ_CFG3_VALUES                      = {0x2000002f, 0x2000002f, 0x10000019, 0x10000019, 0, 0x1000001a, 0x1000001a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};
INT-ARRAY       CFG_ID_L3QM_EQ_CFG4_VALUES                      = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};

CHAR            CFG_ID_L3QM_BUF_PACKING_SIZE                    = 2;    ## 0-no packing, 1-pack in 2KB buffers, 2-pack in 4KB buffers,
                                                                        ## 3-pack in 16KB buffers
CHAR            CFG_ID_L3QM_JUMBO_BUF_PINGPONG_EQS              = 0;    ## enable/disable PINGPON EQ buffer usage
CHAR            CFG_ID_L3QM_LDPID_TO_PON_PORT_MAP_OFFSET        = 0;    ## 0 - no mapping, US traffic to LLID/TCONT doesn't go through DEEPQ,
                                                                        ## 1 - map DQ LDPID to PON port (LLID/TCONT).
                                                                        ##     If (0x7&& (LDPID >> 3)) == QM_QM_UPPER_LDPID_MAP.pon_offset
                                                                        ##     then traffic to the port (7 && LDPID)== X, map to=>PON port (LLID/TCONT).

INT             CFG_ID_L3QM_CPU_PORT_HEAD_ROOM_FIRST            = 32;   ##size of QM pool buffer head room first
INT             CFG_ID_L3QM_CPU256_PORT_HEAD_ROOM_FIRST         = 0;    ## size of QM pool buffer head room first for CPU256
INT             CFG_ID_L3QM_CPU_PORT_COUNT                      = 6;    ##Number of CPU ports for CPU64 used in QM
CHAR            CFG_ID_L3QM_CPU_VOQ_PER_PORT                    = 8;    ##number of CPU64 VoQ per port
INT             CFG_ID_L3QM_CPU_EPP_PER_VOQ                     = 128;  ##number of CPU64 EPP per VoQ
INT             CFG_ID_L3QM_CPU_POOL_BID_COUNT                  = 768;  ##BID count of CPU64 EQ pool
CHAR            CFG_ID_DMA_LSO_ACE_TEST                         = 0;    ##Turn on/off DMA LSO ACE
CHAR            CFG_ID_L3QM_EQ0_SRAM_EQ1_DRAM                   = 0;
CHAR            CFG_ID_QM_AGGR_TIMEOUT                          = 1;  ##0-use HW default buffer aggregation timeout value, 1=set HW buffer aggregation timeout value to max value allowed.

INT             CFG_ID_L3QM_CPU_PORT_HEAD_ROOM_FOR_APP_ACCEL            = 128;
CHAR            CFG_ID_PORT_ID_FOR_APP_ACCEL                            = 0x16;

[L2TE CONFIGS]
INT             CFG_ID_L2TE_GLB_THRSH_THL                       = 0x20;
INT             CFG_ID_L2TE_GLB_THRSH_THH                       = 0x2000;
INT             CFG_ID_L2TE_GLB_PRI_THRSH0_THL                  = 0x10;
INT             CFG_ID_L2TE_GLB_PRI_THRSH1_THL                  = 0x10;
INT             CFG_ID_L2TE_GLB_PRI_THRSH2_THL                  = 0x10;
INT             CFG_ID_L2TE_GLB_PRI_THRSH3_THL                  = 0x10;
INT             CFG_ID_L2TE_GLB_PRI_THRSH4_THL                  = 0x10;
INT             CFG_ID_L2TE_GLB_PRI_THRSH5_THL                  = 0x10;
INT             CFG_ID_L2TE_GLB_PRI_THRSH6_THL                  = 0x10;
INT             CFG_ID_L2TE_GLB_PRI_THRSH7_THL                  = 0x10;
INT             CFG_ID_L2TE_GLB_PRI_THRSH0_THH                  = 0x20;
INT             CFG_ID_L2TE_GLB_PRI_THRSH1_THH                  = 0x20;
INT             CFG_ID_L2TE_GLB_PRI_THRSH2_THH                  = 0x20;
INT             CFG_ID_L2TE_GLB_PRI_THRSH3_THH                  = 0x20;
INT             CFG_ID_L2TE_GLB_PRI_THRSH4_THH                  = 0x20;
INT             CFG_ID_L2TE_GLB_PRI_THRSH5_THH                  = 0x20;
INT             CFG_ID_L2TE_GLB_PRI_THRSH6_THH                  = 0x20;
INT             CFG_ID_L2TE_GLB_PRI_THRSH7_THH                  = 0x20;
INT             CFG_ID_L2TE_PORT_THRSH_PROFILE_0_THL            = 0x10;
INT             CFG_ID_L2TE_PORT_THRSH_PROFILE_1_THL            = 0x10;
INT             CFG_ID_L2TE_PORT_THRSH_PROFILE_2_THL            = 0x3FFF;
INT             CFG_ID_L2TE_PORT_THRSH_PROFILE_3_THL            = 0x3FFF;
INT             CFG_ID_L2TE_PORT_THRSH_PROFILE_0_THH            = 0x300;
INT             CFG_ID_L2TE_PORT_THRSH_PROFILE_1_THH            = 0x500;
INT             CFG_ID_L2TE_PORT_THRSH_PROFILE_2_THH            = 0x7FFF;
INT             CFG_ID_L2TE_PORT_THRSH_PROFILE_3_THH            = 0x7FFF;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_0_THL             = 0x360;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_1_THL             = 0x2C0;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_2_THL             = 0x260;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_3_THL             = 0x7FFF;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_4_THL             = 0x7FFF;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_5_THL             = 0x7FFF;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_6_THL             = 0x7FFF;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_7_THL             = 0x7FFF;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_0_THH             = 0x380;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_1_THH             = 0x300;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_2_THH             = 0x280;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_3_THH             = 0x7FFF;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_4_THH             = 0x7FFF;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_5_THH             = 0x7FFF;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_6_THH             = 0x7FFF;
INT             CFG_ID_L2TE_VOQ_THRSH_PROFILE_7_THH             = 0x7FFF;
INT             CFG_ID_L2TE_SRC_PORT_THRSH_PROFILE_0_THL        = 0x100;
INT             CFG_ID_L2TE_SRC_PORT_THRSH_PROFILE_1_THL        = 0x100;
INT             CFG_ID_L2TE_SRC_PORT_THRSH_PROFILE_2_THL        = 0x100;
INT             CFG_ID_L2TE_SRC_PORT_THRSH_PROFILE_3_THL        = 0x100;
INT             CFG_ID_L2TE_SRC_PORT_THRSH_PROFILE_0_THH        = 0xC00;
INT             CFG_ID_L2TE_SRC_PORT_THRSH_PROFILE_1_THH        = 0xC00;
INT             CFG_ID_L2TE_SRC_PORT_THRSH_PROFILE_2_THH        = 0xC00;
INT             CFG_ID_L2TE_SRC_PORT_THRSH_PROFILE_3_THH        = 0xC00;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS0_THL     = 0x110;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS1_THL     = 0x110;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS2_THL     = 0x110;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS3_THL     = 0x110;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS4_THL     = 0x110;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS5_THL     = 0x110;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS6_THL     = 0x110;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS7_THL     = 0x110;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS0_THH     = 0x280;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS1_THH     = 0x180;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS2_THH     = 0x180;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS3_THH     = 0x180;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS4_THH     = 0x180;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS5_THH     = 0x180;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS6_THH     = 0x180;
INT             CFG_ID_L2TE_SRC0_PRI_THRSH_PROFILE_CoS7_THH     = 0x180;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS0_THL     = 0x110;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS1_THL     = 0x60;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS2_THL     = 0x60;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS3_THL     = 0x60;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS4_THL     = 0x60;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS5_THL     = 0x60;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS6_THL     = 0x60;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS7_THL     = 0x60;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS0_THH     = 0x280;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS1_THH     = 0x180;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS2_THH     = 0x180;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS3_THH     = 0x180;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS4_THH     = 0x180;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS5_THH     = 0x180;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS6_THH     = 0x180;
INT             CFG_ID_L2TE_SRC1_PRI_THRSH_PROFILE_CoS7_THH     = 0x180;
INT             CFG_ID_L2TE_DQSCH_EQ_PROFILE_THRSH0_THL         = 0x7FFF;
INT             CFG_ID_L2TE_DQSCH_EQ_PROFILE_THRSH0_THH         = 0x7FFF;
INT             CFG_ID_L2TE_DQSCH_PORT_THRSH_PROFILE_0_THL      = 0x300;
INT             CFG_ID_L2TE_DQSCH_PORT_THRSH_PROFILE_1_THL      = 0x300;
INT             CFG_ID_L2TE_DQSCH_PORT_THRSH_PROFILE_2_THL      = 0x3FFF;
INT             CFG_ID_L2TE_DQSCH_PORT_THRSH_PROFILE_3_THL      = 0x7FFF;
INT             CFG_ID_L2TE_DQSCH_PORT_THRSH_PROFILE_0_THH      = 0x320;
INT             CFG_ID_L2TE_DQSCH_PORT_THRSH_PROFILE_1_THH      = 0x320;
INT             CFG_ID_L2TE_DQSCH_PORT_THRSH_PROFILE_2_THH      = 0x3FFF;
INT             CFG_ID_L2TE_DQSCH_PORT_THRSH_PROFILE_3_THH      = 0x7FFF;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_0_THL       = 300;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_1_THL       = 1000;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_2_THL       = 18;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_3_THL       = 18;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_4_THL       = 18;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_5_THL       = 18;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_6_THL       = 18;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_7_THL       = 0x7FFF;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_0_THH       = 300;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_1_THH       = 1000;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_2_THH       = 33;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_3_THH       = 33;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_4_THH       = 33;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_5_THH       = 33;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_6_THH       = 33;
INT             CFG_ID_L2TE_DQSCH_VOQ_THRSH_PROFILE_7_THH       = 0x7FFF;
CHAR-ARRAY      CFG_ID_L2TE_VOQ_0_7_DQSCH_THRSH_PROFIL_SEL      = {0,0,0,0,0,0,0,0};
CHAR-ARRAY      CFG_ID_L2TE_VOQ_8_15_DQSCH_THRSH_PROFIL_SEL     = {0,0,0,0,0,0,0,0};
CHAR-ARRAY      CFG_ID_L2TE_VOQ_16_23_DQSCH_THRSH_PROFIL_SEL    = {0,0,0,0,0,0,0,0};
CHAR-ARRAY      CFG_ID_L2TE_VOQ_24_31_DQSCH_THRSH_PROFIL_SEL    = {0,0,0,0,0,0,0,0};
CHAR-ARRAY      CFG_ID_L2TE_VOQ_32_39_DQSCH_THRSH_PROFIL_SEL    = {0,0,0,0,0,0,0,0};
CHAR-ARRAY      CFG_ID_L2TE_VOQ_40_47_DQSCH_THRSH_PROFIL_SEL    = {0,0,0,0,0,0,0,0};
CHAR-ARRAY      CFG_ID_L2TE_VOQ_48_55_DQSCH_THRSH_PROFIL_SEL    = {0,0,0,0,0,0,0,0};
CHAR-ARRAY      CFG_ID_L2TE_VOQ_56_63_DQSCH_THRSH_PROFIL_SEL    = {1,1,1,1,1,1,1,1};
CHAR-ARRAY      CFG_ID_L2TE_VOQ_64_71_DQSCH_THRSH_PROFIL_SEL    = {0,0,0,0,0,0,0,0};
CHAR-ARRAY      CFG_ID_L2TE_VOQ_72_79_DQSCH_THRSH_PROFIL_SEL    = {0,0,0,0,0,0,0,0};
CHAR-ARRAY      CFG_ID_L2TE_VOQ_80_87_DQSCH_THRSH_PROFIL_SEL    = {0,0,0,0,0,0,0,0};
CHAR-ARRAY      CFG_ID_L2TE_VOQ_88_95_DQSCH_THRSH_PROFIL_SEL    = {0,0,0,0,0,0,0,0};
CHAR-ARRAY      CFG_ID_L2TE_VOQ_96_103_DQSCH_THRSH_PROFIL_SEL   = {0,0,0,0,0,0,0,0};
CHAR-ARRAY      CFG_ID_L2TE_VOQ_104_111_DQSCH_THRSH_PROFIL_SEL  = {0,0,0,0,0,0,0,0};
CHAR-ARRAY      CFG_ID_L2TE_VOQ_112_119_DQSCH_THRSH_PROFIL_SEL  = {0,0,0,0,0,0,0,0};
CHAR-ARRAY      CFG_ID_L2TE_VOQ_120_127_DQSCH_THRSH_PROFIL_SEL  = {0,0,0,0,0,0,0,0};

INT             CFG_ID_L2TE_PORT00_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TE_PORT01_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TE_PORT02_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TE_PORT03_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TE_PORT04_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TE_PORT05_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TE_PORT06_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TE_PORT07_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TE_PORT08_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TE_PORT09_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TE_PORT10_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TE_PORT11_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TE_PORT12_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TE_PORT13_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TE_PORT14_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TE_PORT15_FREE_BUF_CNT                 = 0x1F60;
INT             CFG_ID_L2TM_NON_CONGESTION_BUFF_THRESHOLD       = 0x4000;

[L3TE CONFIGS]
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ0_TH0               = 12;
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ1_TH0               = 12;
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ2_TH0               = 204;
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ3_TH0               = 16;
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ4_TH0               = 16;
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ5_TH0               = 819;
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ6_TH0               = 0x3FFF;
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ7_TH0               = 0x3FFF;
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ0_TH1               = 12;
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ1_TH1               = 12;
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ2_TH1               = 204;
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ3_TH1               = 16;
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ4_TH1               = 16;
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ5_TH1               = 819;
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ6_TH1               = 0x3FFF;
INT             CFG_ID_L3TE_PROFILE_THRSH_EQ7_TH1               = 0x3FFF;
INT             CFG_ID_L3TE_PORT_THRSH_PROFILE_0_LTH            = 12;
INT             CFG_ID_L3TE_PORT_THRSH_PROFILE_1_LTH            = 0;
INT             CFG_ID_L3TE_PORT_THRSH_PROFILE_2_LTH            = 50;
INT             CFG_ID_L3TE_PORT_THRSH_PROFILE_3_LTH            = 0;
INT             CFG_ID_L3TE_PORT_THRSH_PROFILE_0_HTH            = 120;
INT             CFG_ID_L3TE_PORT_THRSH_PROFILE_1_HTH            = 16;
INT             CFG_ID_L3TE_PORT_THRSH_PROFILE_2_HTH            = 1200;
INT             CFG_ID_L3TE_PORT_THRSH_PROFILE_3_HTH            = 16;
INT             CFG_ID_L3TE_CB_PORT_GRPTHRSH_PROFILE_0_LTH      = 0x3FFF;
INT             CFG_ID_L3TE_CB_PORT_GRPTHRSH_PROFILE_1_LTH      = 0x3FFF;
INT             CFG_ID_L3TE_CB_PORT_GRPTHRSH_PROFILE_2_LTH      = 0x3FFF;
INT             CFG_ID_L3TE_CB_PORT_GRPTHRSH_PROFILE_3_LTH      = 0x3FFF;
INT             CFG_ID_L3TE_CB_PORT_GRPTHRSH_PROFILE_0_HTH      = 0x3FFF;
INT             CFG_ID_L3TE_CB_PORT_GRPTHRSH_PROFILE_1_HTH      = 0x3FFF;
INT             CFG_ID_L3TE_CB_PORT_GRPTHRSH_PROFILE_2_HTH      = 0x3FFF;
INT             CFG_ID_L3TE_CB_PORT_GRPTHRSH_PROFILE_3_HTH      = 0x3FFF;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_0_THL             = 210;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_1_THL             = 971;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_2_THL             = 0x3FFF;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_3_THL             = 0x3FFF;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_4_THL             = 0x3FFF;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_5_THL             = 0x3FFF;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_6_THL             = 0x3FFF;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_7_THL             = 0x3FFF;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_0_THH             = 217;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_1_THH             = 975;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_2_THH             = 0x3FFF;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_3_THH             = 0x3FFF;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_4_THH             = 0x3FFF;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_5_THH             = 0x3FFF;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_6_THH             = 0x3FFF;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_7_THH             = 0x3FFF;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_0_PRVT            = 0;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_1_PRVT            = 0;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_2_PRVT            = 0;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_3_PRVT            = 0;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_4_PRVT            = 0;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_5_PRVT            = 0;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_6_PRVT            = 0;
INT             CFG_ID_L3TE_VOQ_THRSH_PROFILE_7_PRVT            = 0;
INT             CFG_ID_L3TE_SRC_PORT_THRSH_0_THL                = 1024;
INT             CFG_ID_L3TE_SRC_PORT_THRSH_1_THL                = 1024;
INT             CFG_ID_L3TE_SRC_PORT_THRSH_0_THH                = 1840;
INT             CFG_ID_L3TE_SRC_PORT_THRSH_1_THH                = 1843;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_0_THL                 = 128;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_1_THL                 = 128;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_2_THL                 = 128;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_3_THL                 = 128;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_4_THL                 = 128;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_5_THL                 = 128;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_6_THL                 = 128;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_7_THL                 = 128;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_0_THH                 = 230;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_1_THH                 = 230;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_2_THH                 = 230;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_3_THH                 = 230;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_4_THH                 = 230;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_5_THH                 = 230;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_6_THH                 = 230;
INT             CFG_ID_L3TE_SRC_PRI_THRSH_7_THH                 = 230;
INT             CFG_ID_L3TE_DQSCH_PORT_THRSH_PROFILE_0          = 307;
INT             CFG_ID_L3TE_DQSCH_PORT_THRSH_PROFILE_1          = 0x3FFF;
INT             CFG_ID_L3TE_DQSCH_PORT_THRSH_PROFILE_2          = 0x3FFF;
INT             CFG_ID_L3TE_DQSCH_PORT_THRSH_PROFILE_3          = 0x3FFF;
INT             CFG_ID_L3TE_DQSCH_VOQ_THRSH_PROFILE_0           = 115;
INT             CFG_ID_L3TE_DQSCH_VOQ_THRSH_PROFILE_1           = 115;
INT             CFG_ID_L3TE_DQSCH_VOQ_THRSH_PROFILE_2           = 115;
INT             CFG_ID_L3TE_DQSCH_VOQ_THRSH_PROFILE_3           = 115;
INT             CFG_ID_L3TE_DQSCH_VOQ_THRSH_PROFILE_4           = 115;
INT             CFG_ID_L3TE_DQSCH_VOQ_THRSH_PROFILE_5           = 115;
INT             CFG_ID_L3TE_DQSCH_VOQ_THRSH_PROFILE_6           = 115;
INT             CFG_ID_L3TE_DQSCH_VOQ_THRSH_PROFILE_7           = 115;
INT-ARRAY       CFG_ID_L3TE_PORT00_FREE_BUF_CNT                 = {1000,1000};
INT-ARRAY       CFG_ID_L3TE_PORT01_FREE_BUF_CNT                 = {1000,1000};
INT-ARRAY       CFG_ID_L3TE_PORT02_FREE_BUF_CNT                 = {1000,1000};
INT-ARRAY       CFG_ID_L3TE_PORT03_FREE_BUF_CNT                 = {1000,1000};
INT-ARRAY       CFG_ID_L3TE_PORT04_FREE_BUF_CNT                 = {1000,1000};
INT-ARRAY       CFG_ID_L3TE_PORT05_FREE_BUF_CNT                 = {1000,1000};
INT-ARRAY       CFG_ID_L3TE_PORT06_FREE_BUF_CNT                 = {128,128};
INT-ARRAY       CFG_ID_L3TE_PORT07_FREE_BUF_CNT                 = {128,128};
INT-ARRAY       CFG_ID_L3TE_PORT08_FREE_BUF_CNT                 = {868,0};
INT-ARRAY       CFG_ID_L3TE_PORT09_FREE_BUF_CNT                 = {868,0};
INT-ARRAY       CFG_ID_L3TE_PORT10_FREE_BUF_CNT                 = {868,0};
INT-ARRAY       CFG_ID_L3TE_PORT11_FREE_BUF_CNT                 = {868,0};
INT-ARRAY       CFG_ID_L3TE_PORT12_FREE_BUF_CNT                 = {868,0};
INT-ARRAY       CFG_ID_L3TE_PORT13_FREE_BUF_CNT                 = {868,0};
INT-ARRAY       CFG_ID_L3TE_PORT14_FREE_BUF_CNT                 = {868,0};
INT-ARRAY       CFG_ID_L3TE_PORT15_FREE_BUF_CNT                 = {3900,0};

INT             CFG_ID_L3TE_WRED_MARK_IDX                       = 8;
INT             CFG_ID_L3TE_WRED_UNMARK_IDX                     = 8;
CHAR-ARRAY      CFG_ID_L3TE_VOQ_0_7_THRSH_PROFILE               = {0,0,0,0,0,0,0,0}; 	#Threshold profile ids for VoQ (8 VoQs for CPU port 0)
CHAR-ARRAY      CFG_ID_L3TE_VOQ_8_15_THRSH_PROFILE              = {0,0,0,0,0,0,0,0}; 	#Threshold profile ids for VoQ (8 VoQs for CPU port 1)
CHAR-ARRAY      CFG_ID_L3TE_VOQ_16_23_THRSH_PROFILE             = {0,0,0,0,0,0,0,0}; 	#Threshold profile ids for VoQ (8 VoQs for CPU port 2)
CHAR-ARRAY      CFG_ID_L3TE_VOQ_24_31_THRSH_PROFILE             = {0,0,0,0,0,0,0,0}; 	#Threshold profile ids for VoQ (8 VoQs for CPU port 3)
CHAR-ARRAY      CFG_ID_L3TE_VOQ_32_39_THRSH_PROFILE             = {0,0,0,0,0,0,0,0}; 	#Threshold profile ids for VoQ (8 VoQs for CPU port 4)
CHAR-ARRAY      CFG_ID_L3TE_VOQ_40_47_THRSH_PROFILE             = {0,0,0,0,0,0,0,0}; 	#Threshold profile ids for VoQ (8 VoQs for CPU port 5)
CHAR-ARRAY      CFG_ID_L3TE_VOQ_48_55_THRSH_PROFILE             = {0,0,0,0,0,0,0,0}; 	#Threshold profile ids for VoQ (8 VoQs for CPU port 6)
CHAR-ARRAY      CFG_ID_L3TE_VOQ_56_63_THRSH_PROFILE             = {0,0,0,0,0,0,0,0}; 	#Threshold profile ids for VoQ (8 VoQs for CPU port 7)
CHAR-ARRAY      CFG_ID_L3TE_VOQ_64_71_THRSH_PROFILE             = {0,0,0,0,0,0,0,0}; 	#Threshold profile ids for VoQ (8 VoQs for DQ port 0)
CHAR-ARRAY      CFG_ID_L3TE_VOQ_72_79_THRSH_PROFILE             = {0,0,0,0,0,0,0,0}; 	#Threshold profile ids for VoQ (8 VoQs for DQ port 1)
CHAR-ARRAY      CFG_ID_L3TE_VOQ_80_87_THRSH_PROFILE             = {0,0,0,0,0,0,0,0}; 	#Threshold profile ids for VoQ (8 VoQs for DQ port 2)
CHAR-ARRAY      CFG_ID_L3TE_VOQ_88_95_THRSH_PROFILE             = {0,0,0,0,0,0,0,0}; 	#Threshold profile ids for VoQ (8 VoQs for DQ port 3)
CHAR-ARRAY      CFG_ID_L3TE_VOQ_96_103_THRSH_PROFILE            = {0,0,0,0,0,0,0,0}; 	#Threshold profile ids for VoQ (8 VoQs for DQ port 4)
CHAR-ARRAY      CFG_ID_L3TE_VOQ_104_111_THRSH_PROFILE           = {0,0,0,0,0,0,0,0}; 	#Threshold profile ids for VoQ (8 VoQs for DQ port 5)
CHAR-ARRAY      CFG_ID_L3TE_VOQ_112_119_THRSH_PROFILE           = {0,0,0,0,0,0,0,0}; 	#Threshold profile ids for VoQ (8 VoQs for DQport 6)
CHAR-ARRAY      CFG_ID_L3TE_VOQ_120_127_THRSH_PROFILE           = {1,1,1,1,1,1,1,1}; 	#Threshold profile ids for VoQ (8 VoQs for DQ port 7)
CHAR-ARRAY      CFG_ID_L3TE_PORT_THRSH_PROFILE                  = {2,2,2,2,2,2,0,0,1,1,1,1,1,1,1,3}; 	#thresh profile id assigned to each port - 8 CPU, 8 DQ ports


[L2FE CONFIGS]
CHAR-ARRAY      CFG_ID_NE_TX_LDPID                              = {0x07, 0x19, 0x19, 0x19, 0xFF, 0xFF, 0xFF, 0xFF}; ##TX ldpid of NI interfaces
CHAR            CFG_ID_WAN_PORT_ID                              = 0x07;
INT-ARRAY       CFG_ID_FAKE_WAN_MC_VID                          = {0xFEF, 0xFF0, 0xFF1, 0xFF2, 0xFF3, 0xFF4, 0xFF5, 0xFF6, 0xFF7, 0xFF8, 0xFF9, 0xFFA, 0xFFB, 0xFFC, 0xFFD, 0xFFE};
INT-ARRAY       CFG_ID_FLOODING_DOMAIN_1                        = {3, 4, 5, 6, 0x10, 0x7, 0xFF, 0xFF};
INT-ARRAY       CFG_ID_DOMAIN_1_MEMBERS                         = {3, 4, 5, 6, 0x10, 0x7, 0xFF, 0xFF};  ##member ports for default VLAN
CHAR            CFG_ID_FDB_LEARN_MODE                           = 1;
CHAR-ARRAY      CFG_ID_L2FE_CLS_PORT_ENTRY_NUM                  = {0,0,0,0,0,24,0,24,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24};##Configure variables for classifier resource
CHAR-ARRAY      CFG_ID_L2FE_CLS_PORT_EGR_ENTRY_NUM              = {0,0,0,0,0,24,0,24,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24};##Configure variables for classifier resource
CHAR            CFG_ID_L2FE_CLASSIFIER_USE_32_ENTRY             = 0;
CHAR            CFG_ID_L2_UPSTREAM_REDIRECT_TO_L3FE             = 0;	##Redirect upstream traffic to L3FE or not
CHAR            CFG_ID_WAN_TO_L3FE                              = 0;
CHAR-ARRAY      CFG_ID_L2FE_PORT_ILPB_WAN_IND_PORTS             = {0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};##
CHAR-ARRAY      CFG_ID_PORT_L2VLAN_OUTER_IS_S                   = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
CHAR-ARRAY      CFG_ID_PORT_L2VLAN_INNER_IS_S                   = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
CHAR            CFG_ID_WAN_PORT_TYPE_IS_L3                      = 0;
CHAR            CFG_ID_NE_CPU_CPU_PORT_COUNT                    = 4;    ##CPU port count 0-3 for QM
INT             CFG_ID_NE_DEFAULT_FLOW                          = 0; ##Arb default flow
INT             CFG_ID_MC_MAC_UC_CONV_MC                        = 1; ##converting_incoming_wan_ucmac_to_mcmac_for_pppoe
CHAR            CFG_ID_LAN_2_LAN_MC                             = 1; ## 1: enable 0: disable
CHAR            CFG_ID_POLICY_FLOW_ID_MODE                      = 0; ## policy API, 0: flow_id for both L2TE and L3TE; 1: if flow_id <256, flow_id = L2TE flow_id, else if 256<=flow_id<384, flow_id - 256 = L3TE flow_id
INT             CFG_ID_MIRROR_VLAN                              = 2018;
CHAR            CFG_ID_PORT_INGRESS_COS_MAPPING_USE_DEFAULT     = 0; #0=use default CoS configured for the port, 1=use CoS value in internal header
CHAR-ARRAY      CFG_ID_PORT_DEEPQ_ENABLE                        = {0, 0, 0, 0xFF, 0xFF, 0xFF, 0xFF, 0}; #1-enqueue traffic to DEEPQ for egress port, 0-enqueue traffic to on-chip SRAM for egress port.
CHAR            CFG_ID_LOCAL_FLOODING_CTRL                      = 1;	##1-enable LAN port flooding, 0=disable LAN port flooding

[L3FE CONFIGS]
CHAR            CFG_ID_FLOW_SUPPORT                             = 1; # Flow API support
CHAR            CFG_ID_L3_CLASSIFIER_PROFILE_WAN                = 0; # CLS profile for ingress packets from WAN port
CHAR            CFG_ID_L3_CLASSIFIER_PROFILE_LAN                = 1; # CLS profile for ingress packets from LAN port
CHAR            CFG_ID_L3FE_T5_CTRL_SUPPORT                     = 0;
CHAR            CFG_ID_NAT_ENABLE                               = 0;
INT             CFG_ID_L3FE_MAIN_HASH_OVERFLOW_FIB_LENGTH       = 64; # Available value: 8, 16, 24, 32, 48, 64, 96, 128. (bytes)
INT             CFG_ID_L3FE_MAIN_HASH_OVERFLOW_FIB_COUNT        = 32;
INT             CFG_ID_L3FE_MAIN_HASH_DEFAULT_HASH_FIB_LENGTH   = 64; # Available value: 8, 16, 24, 32, 48, 64, 96, 128. (bytes)
INT             CFG_ID_L3FE_MAIN_HASH_DEFAULT_HASH_FIB_COUNT    = 32;
INT             CFG_ID_L3FE_MAIN_HASH_ACTION_CACHE_FIB_LENGTH   = 64; # Available value: 8, 16, 24, 32, 48, 64, 96, 128. (bytes)
INT             CFG_ID_L3FE_MAIN_HASH_ACTION_CACHE_FIB_COUNT    = 1024; # Available value: 0, 256, 512, 1024, 2048.
INT             CFG_ID_L3FE_MAIN_HASH_TABLE_ENTRY_LENGTH        = 4;
INT             CFG_ID_L3FE_MAIN_HASH_TABLE_ENTRY_COUNT         = 65536; # Available value: 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536.
INT             CFG_ID_L3FE_MAIN_HASH_ACTION_TABLE_ENTRY_LENGTH = 64; # Available value: 8, 16, 24, 32, 48, 64, 96, 128. (bytes)
INT             CFG_ID_L3FE_MAIN_HASH_ACTION_TABLE_ENTRY_COUNT  = 65536; # Available value: 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536.
CHAR            CFG_ID_L3_MAIN_HASH_PROFILE_WAN                 = 0; # Hash profile for ingress packets from WAN port
CHAR            CFG_ID_L3_MAIN_HASH_PROFILE_LAN                 = 1; # Hash profile for ingress packets from LAN port
CHAR            CFG_ID_L3_MAIN_HASH_PROFILE_MC                  = 2; # Hash profile for Multicast packets
CHAR            CFG_ID_L3_MAIN_HASH_PROFILE_CLASS               = 3; # obsolete
CHAR            CFG_ID_MAIN_HASH_CACHE_REP_EN                   = 0; ##0-no cache replacement when cache is full, replace oldest when cache full
CHAR            CFG_ID_MAIN_HASH_BM_TEST                        = 0; # for Hash benchmark test
INT             CFG_ID_LPM_IPV4_PROFILE_0_START                 = 0;  # LPM IPv4 profile#0 start_row number; must not exceed end_row.
INT             CFG_ID_LPM_IPV4_PROFILE_0_END                   = 3;  # LPM IPv4 profile#0 end_row number; must be not lower than start_row.
INT             CFG_ID_LPM_IPV4_PROFILE_1_START                 = 15;
INT             CFG_ID_LPM_IPV4_PROFILE_1_END                   = 15;
INT             CFG_ID_LPM_IPV4_PROFILE_2_START                 = 15;
INT             CFG_ID_LPM_IPV4_PROFILE_2_END                   = 15;
INT             CFG_ID_LPM_IPV4_PROFILE_3_START                 = 15;
INT             CFG_ID_LPM_IPV4_PROFILE_3_END                   = 15;
INT             CFG_ID_LPM_IPV6_PROFILE_0_START                 = 31; # LPM IPv6 profile#0 start_row number; must be not lower than end_row.
INT             CFG_ID_LPM_IPV6_PROFILE_0_END                   = 24; # LPM IPv6 profile#0 end_row number; must not exceed start_row.
INT             CFG_ID_LPM_IPV6_PROFILE_1_START                 = 16;
INT             CFG_ID_LPM_IPV6_PROFILE_1_END                   = 16;
INT             CFG_ID_LPM_IPV6_PROFILE_2_START                 = 16;
INT             CFG_ID_LPM_IPV6_PROFILE_2_END                   = 16;
INT             CFG_ID_LPM_IPV6_PROFILE_3_START                 = 16;
INT             CFG_ID_LPM_IPV6_PROFILE_3_END                   = 16;
INT             CFG_ID_LPM_IPV4_DEFAULT_T4CTRL_0                = 0;  # The HashLite profile to use if IPv4 LPM entry is hit and entry.rst_ctrl is 0.
INT             CFG_ID_LPM_IPV4_DEFAULT_T4CTRL_1                = 14; # THe HashLite profile to use if IPv4 LPM entry is hit and entry.rst_ctrl is 1.
INT             CFG_ID_LPM_IPV6_DEFAULT_T4CTRL_0                = 0;  # The HashLite profile to use if IPv6 LPM entry is hit and entry.rst_ctrl is 0.
INT             CFG_ID_LPM_IPV6_DEFAULT_T4CTRL_1                = 14; # The HashLite profile to use if IPv6 LPM entry is hit and entry.rst_ctrl is 1.
INT             CFG_ID_HASHLITE_HT_SIZE                         = 0; # 0: 1k-entry * 384-bit hash_action. 1: 2k-entry * 192-bit hash_action.
CHAR            CFG_ID_L3_HASHLITE_PROFILE_UPSTREAM             = 1; # HashLite profile for upstream, PON mapping, or default choice
CHAR            CFG_ID_L3_HASHLITE_PROFILE_DOWNSTREAM           = 1; # HashLite profile for downstream, tunnel offload
CHAR            CFG_ID_L3_HASHLITE_PROFILE_UPSTREAM_FLOW        = 1; # HashLite profile for upstream in Flow API
CHAR            CFG_ID_L3_HASHLITE_PROFILE_DOWNSTREAM_FLOW      = 2; # HashLite profile for downstream in Flow API
CHAR            CFG_ID_L3_HASHLITE_PROFILE_CPU2PON              = 3; # HashLite profile for CPU-to-PON path

CHAR            CFG_ID_IP_ECN_SUPPORT                           = 1;
CHAR            CFG_ID_USE_HASH_FOR_CLASSIFIER                  = 1; # allow hash to be used for classifier

[KERNELHOOK CONFIGS]
CHAR            CFG_ID_NE_USE_BUILD_SKB                         = 1;    ##Use build_skb to construct struct sk_buff when packet is received
CHAR            CFG_ID_NE_CPU256_USE_BUILD_SKB                  = 1;    ##Use build_skb to construct struct sk_buff when packet is received for CPU256
INT             CFG_ID_NE_NAPI_BUDGET                           = 16;   ##The max. count of packet for one NAPI
CHAR            CFG_ID_NE_RX_BUF_RECYCLE                        = 0;    ##Re-cycle the used RX buffer to refill to QM EQ pool
CHAR            CFG_ID_NE_TX_TIMER_ENABLE                       = 0;    ##Use a TX timer to free the TX descriptors
CHAR            CFG_ID_NE_CA_RX_REGISTER_USE_MQ                 = 0;    ##In ca_rx_register() us MQ to store the incoming packets
CHAR            CFG_ID_NE_NETLINK_RX_ACK_TIMEOUT                = 1;    #ACK receive wait timeout. 1 second unit

##Number of NI active interfaces, Max. 8; Format:{my_mac_index, cpu_port, egress_cpu_port}. {0xFFFFFFFF, x, x} means interface is not enabled.
INT-ARRAY       CFG_ID_NI0_DRV_INIT                             = {0, 0, 0};           ## interface 0 driver configure
INT-ARRAY       CFG_ID_NI1_DRV_INIT                             = {0xFFFFFFFF, 1, 0};  ## interface 1 driver configure
INT-ARRAY       CFG_ID_NI2_DRV_INIT                             = {0xFFFFFFFF, 2, 0};  ## interface 2 driver configure
INT-ARRAY       CFG_ID_NI3_DRV_INIT                             = {0xFFFFFFFF, 3, 0};  ## interface 3 driver configure
INT-ARRAY       CFG_ID_NI4_DRV_INIT                             = {0xFFFFFFFF, 4, 0};  ## interface 4 driver configure
INT-ARRAY       CFG_ID_NI5_DRV_INIT                             = {0xFFFFFFFF, 5, 0};  ## interface 5 driver configure
INT-ARRAY       CFG_ID_NI6_DRV_INIT                             = {0xFFFFFFFF, 6, 0};  ## interface 6 driver configure
INT-ARRAY       CFG_ID_NI7_DRV_INIT                             = {0xFFFFFFFF, 7, 1};  ## interface 7 driver configure

CHAR-ARRAY      CFG_ID_NI_L3FE_DEMUX    = {0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2, 0,0,0,0,0,0,0,0,2,2,2,2,2,0,2,0, 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2, 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2};## internal use only. 64 L3FE ports, 0=send to L3QM, 1=WAN, 2=L2FE, 3=L2TM
CHAR-ARRAY      CFG_ID_NI_L3FE_DQ_DEMUX = {0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2, 0,0,0,0,0,0,0,0,2,2,2,2,2,0,2,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};## internal use only. 64 L3FE ports, 0=send to L3QM, 1=WAN, 2=L2FE, 3=L2TM
CHAR            CFG_ID_L3FE_STG0_KEEP_ORG_LSPID                 = 1;	#0- Update LSPID based on updating flowchart, 1- No LSPID update in STG0

STRING          CFG_ID_ETH_INTF0_NAME                           = eth0; ## interface name of interface 0
STRING          CFG_ID_ETH_INTF1_NAME                           = eth1; ## interface name of interface 1
STRING          CFG_ID_ETH_INTF2_NAME                           = eth2; ## interface name of interface 2
STRING          CFG_ID_ETH_INTF3_NAME                           = eth3; ## interface name of interface 3
STRING          CFG_ID_ETH_INTF4_NAME                           = eth4; ## interface name of interface 4
STRING          CFG_ID_ETH_INTF5_NAME                           = eth5; ## interface name of interface 5
STRING          CFG_ID_ETH_INTF6_NAME                           = eth6; ## interface name of interface 6
STRING          CFG_ID_ETH_INTF7_NAME                           = eth7; ## interface name of interface 7

INT             CFG_ID_UNI_PORT_SCAN_BIT_MAP                    = 0x00000078; ## b'01111000 --- port 3,4,5,6 (default all UNI ports are enable)

[OFFLOAD CONFIGS]
CHAR            CFG_ID_WELL_KNOWN_MC_OFFLOAD_PE_ID              = 1; 	#PE ID for well-known multicast offload, Valid value: 0, 1 

[AXI QoS CONFIGS]
CHAR            CFG_ID_AXI_MAX_OUTSTANDING_WRITE                = 18;	##0-31, AXI max outstanding write: NEL default 0x18, DDR_CTRL_DDR_SCH_GROUPING_max_wr_req 
CHAR            CFG_ID_AXI_MAX_OUTSTANDING_READ                 = 10;	##0-31, AXI max outstanding read: NEL default 0x10, DDR_CTRL_DDR_SCH_GROUPING_max_rd_req 

CHAR            CFG_ID_AXI_PORT6_DDR_WRITE_QOS                  = 10;	##0-15 15 is highest priority, US write QM_QM_CFG3_EQ%d_qos = 10 
CHAR            CFG_ID_AXI_PORT7_DDR_WRITE_QOS                  = 9;	##0-15 15 is highest priority, DS write QM_QM_CFG3_EQ%d_qos = 9 
CHAR            CFG_ID_AXI_PORT6_DDR_READ_QOS                   = 7;	##0-15 15 is highest priority, DS read QM_QM_AXI_ATTRIBUTE_DATA0.qos =8
CHAR            CFG_ID_AXI_PORT7_DDR_READ_QOS                   = 8;	##0-15 15 is highest priority, US read QM_QM_AXI_ATTRIBUTE_DATA0.qos =7
CHAR            CFG_ID_AXI_PON2CPU_DDR_WRITE_QOS                = 15;	##0-15 15 is highest priority, DS OAM write QM_QM_CFG3_EQ%d_qos=15
CHAR            CFG_ID_AXI_CPU2PON_DDR_WRITE_QOS                = 14;	##0-15 15 is highest priority, US OAM read DMA_GLB_AXI_USER_PATX[21:18] =14

